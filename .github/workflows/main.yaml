---
# This Github workflow will run jobs to build java-app.
name: spring-petclinic
on:
  push:
  workflow_dispatch:
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
permissions:
  pull-requests: write

jobs:


  ci-package-application:
    name: Package Application
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Maven Package
        run: mvn --batch-mode --update-snapshots package

      - uses: actions/upload-artifact@v1
        with:
          name: maven-output
          path: target/
          

  ci-create-container-image:
    name: Create Container Image
    needs: ci-package-application
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.buildah-build.outputs.image }}
      tags: ${{ steps.buildah-build.outputs.image }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v1
        with:
          name: maven-output
          path: target/

      - name: Buildah Action
        id: buildah-build
        uses: redhat-actions/buildah-build@v2
        with:
          image: spring-petclinic # TODO: hard coded
          tags: ${{ github.sha }}
          containerfiles: |
            ./Containerfile

      - run: echo "::notice::${{ steps.buildah-build.outputs.image }}"


  ci-push-container-image-to-repository:
    name: Push Container Image to Repository
    needs: ci-create-container-image
    runs-on: ubuntu-latest
    steps:
      - run: echo "::notice::${{ needs.ci-create-container-image.outputs.image }}"
      - uses: redhat-actions/push-to-registry@v2
        with:
          registry: quay.io/dwinchell_redhat
          image: ${{ needs.ci-create-container-image.outputs.image }}
          tags: ${{ needs.ci-create-container-image.outputs.tags }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}


  deploy-or-update-environment-dev:
    name: Deploy or Update Environment - DEV
    needs: ci-push-container-image-to-repository
    runs-on: ubuntu-latest
    steps:
      - name: Cache Tools
        uses: actions/cache@v3
        with:
          path: bin

      - name: Download ArgoCD CLI
        run: |
          if $(test -f ./bin/argocd); then
            curl -vL https://github.com/argoproj/argo-cd/releases/download/v2.4.3/argocd-linux-amd64 -o ./bin/argocd
            chmod +x bin/argocd 
          fi
          ./bin/argocd version

      # TODO: create or update argocd application

      - name: deploy-or-update-environment-dev
        uses: fjogeleit/yaml-update-action@main # TODO: sha
        with:
          valueFile: 'charts/spring-petclinic-deploy/values-DEV.yaml' # TODO: hard coded
          propertyPath: 'image.tag'
          value: quay.io/dwinchell/spring-petclinic@latest # TODO: hard coded
          branch: deployment/foo # TODO: hard coded
          targetBranch: deployment/bar
          message: 'Update Image Version to foo' # TODO: hard coded
          #message: 'Update Image Version to ${{ steps.image.outputs.version }}' 

